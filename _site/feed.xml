<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Alun Xu</title>
    <description>Musical Data Scientist</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 05 Jan 2023 16:47:58 +1100</pubDate>
    <lastBuildDate>Thu, 05 Jan 2023 16:47:58 +1100</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>
    
      <item>
        <title>申请回忆录</title>
        <description>&lt;p&gt;Model the dataset as a parametric probability density model:&lt;/p&gt;

\[y \sim g(y;\theta)\]

&lt;p&gt;We have the likelihood:&lt;/p&gt;

\[L(y;\theta) = g(y;\theta) = g(y_1,...,y_N ; \theta) = \prod_{i=1}^{N} g(y_i;\theta)\]

&lt;p&gt;In computer science, a &lt;strong&gt;software framework&lt;/strong&gt; is an abstraction in which software providing generic functionality can be selectively changed by additional user-written code, thus providing application-specific software. A software framework provides a standard way to build and deploy applications.&lt;/p&gt;

&lt;!--more--&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Walking on water and developing software from a specification are easy if both are frozen.” &lt;cite&gt;- Edward V Berard -&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A software framework is a universal, reusable software environment that provides particular functionality as part of a larger software platform to facilitate development of software applications, products and solutions. Software frameworks may include support programs, compilers, code libraries, tool sets, and application programming interfaces (APIs) that bring together all the different components to enable development of a project or system. &lt;a href=&quot;https://en.wikipedia.org/wiki/Software_framework&quot;&gt;(Source)&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;react&quot;&gt;React&lt;/h2&gt;

&lt;p&gt;In computing, &lt;a href=&quot;https://reactjs.org/&quot;&gt;React&lt;/a&gt; (sometimes styled React.js or ReactJS) is a JavaScript library for building user interfaces.&lt;/p&gt;

&lt;p&gt;It is maintained by Facebook, Instagram and a community of individual developers and corporations.&lt;/p&gt;

&lt;p&gt;React allows developers to create large web-applications that use data and can change over time without reloading the page. It aims primarily to provide speed, simplicity, and scalability. React processes only user interfaces in applications. This corresponds to View in the Model-View-Controller (MVC) pattern, and can be used in combination with other JavaScript libraries or frameworks in &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC&lt;/a&gt;, such as AngularJS.&lt;/p&gt;

&lt;h2 id=&quot;vue&quot;&gt;Vue&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://vuejs.org/&quot;&gt;Vue.js&lt;/a&gt; &lt;em&gt;(commonly referred to as Vue; pronounced /vjuː/, like view)&lt;/em&gt; is an open-source progressive JavaScript framework for building user interfaces. Integration into projects that use other JavaScript libraries is made easy with Vue because it is designed to be incrementally adoptable. Vue can also function as a web application framework capable of powering advanced single-page applications.&lt;/p&gt;

&lt;h2 id=&quot;ember&quot;&gt;Ember&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://emberjs.com/&quot;&gt;Ember.js&lt;/a&gt; is an open-source JavaScript web framework, based on the Model–view–viewmodel (MVVM) pattern. It allows developers to create scalable single-page web applications by incorporating common idioms and best practices into the framework.&lt;/p&gt;

&lt;p&gt;Ember is used on many popular websites, including Discourse, Groupon, LinkedIn, Vine, Live Nation, Nordstrom, Twitch.tv and Chipotle. Although primarily considered a framework for the web, it is also possible to build desktop and mobile applications in Ember. The most notable example of an Ember desktop application is Apple Music, a feature of the iTunes desktop application.&lt;/p&gt;

&lt;h2 id=&quot;angular&quot;&gt;Angular&lt;/h2&gt;

&lt;p&gt;AngularJS &lt;em&gt;(commonly referred to as “Angular.js” or “AngularJS 1.X”)&lt;/em&gt; is a JavaScript-based open-source front-end web application framework mainly maintained by Google and by a community of individuals and corporations to address many of the challenges encountered in developing single-page applications. The JavaScript components complement Apache Cordova, the framework used for developing cross-platform mobile apps. It aims to simplify both the development and the testing of such applications by providing a framework for client-side model–view–controller (MVC) and model–view–viewmodel (MVVM) architectures, along with components commonly used in rich Internet applications. In 2014, the original AngularJS team began working on Angular (Application Platform).&lt;/p&gt;

&lt;p&gt;The AngularJS framework works by first reading the HTML page, which has additional custom tag attributes embedded into it. Angular interprets those attributes as directives to bind input or output parts of the page to a model that is represented by standard JavaScript variables. The values of those JavaScript variables can be manually set within the code, or retrieved from static or dynamic JSON resources.&lt;/p&gt;

&lt;p&gt;According to JavaScript analytics service Libscore, AngularJS is used on the websites of Wolfram Alpha, NBC, Walgreens, Intel, Sprint, ABC News, and about 12,000 other sites out of 1 million tested in October 2016. AngularJS is currently in the top 100 of the most starred projects on GitHub.&lt;/p&gt;

&lt;p&gt;AngularJS is the frontend part of the &lt;strong&gt;MEAN stack&lt;/strong&gt;, consisting of MongoDB database, &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express.js&lt;/a&gt; web application server framework, Angular.js itself, and Node.js server runtime environment.&lt;/p&gt;
</description>
        <pubDate>Wed, 05 Jan 2022 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/choosing-the-best-front-end-framework</link>
        <guid isPermaLink="true">http://localhost:4000/choosing-the-best-front-end-framework</guid>
        
        <category>dsad</category>
        
        <category>Tips</category>
        
        
      </item>
    
      <item>
        <title>Learning JavaScript Design Patterns</title>
        <description>&lt;p&gt;A pattern is a reusable solution that can be applied to commonly occurring problems in software design - in our case - in writing JavaScript web applications.&lt;/p&gt;

&lt;p&gt;In software engineering, a software design pattern is a general, reusable solution to a commonly occurring problem within a given context in software design.&lt;/p&gt;

&lt;p&gt;It is not a finished design that can be transformed directly into source or machine code. It is a description or template for how to solve a problem that can be used in many different situations. Design patterns are formalized best practices that the programmer can use to solve common problems when designing an application or system.&lt;/p&gt;

&lt;p&gt;Object-oriented design patterns typically show relationships and interactions between classes or objects, without specifying the final application classes or objects that are involved. Patterns that imply mutable state may be unsuited for functional programming languages, some patterns can be rendered unnecessary in languages that have built-in support for solving the problem they are trying to solve, and object-oriented patterns are not necessarily suitable for non-object-oriented languages.&lt;/p&gt;

&lt;p&gt;Design patterns may be viewed as a structured approach to computer programming intermediate between the levels of a programming paradigm and a concrete algorithm.&lt;/p&gt;

&lt;p&gt;Design patterns are advanced object-oriented solutions to commonly occurring software problems. Patterns are about reusable designs and interactions of objects. Each pattern has a name and becomes part of a vocabulary when discussing complex design solutions.&lt;/p&gt;

&lt;h2 id=&quot;standardization&quot;&gt;Standardization&lt;/h2&gt;

&lt;p&gt;JavaScript, also known as ECMAScript is a dynamic programming language. It is most commonly used as part of web browsers, whose implementations allow client-side scripts to interact with the user, control the browser, communicate asynchronously, and alter the document content that is displayed.&lt;/p&gt;

&lt;p&gt;JavaScript (at least the strict subset asm.js) is also considered an “assembly language of the web” – a compile target of source-to-source compilers – for making client side web applications, using other programming languages, supported by all the major browsers without plug-ins.&lt;/p&gt;

&lt;p&gt;It is also used in server-side network programming with runtime environments such as Node.js, game development and the creation of desktop and mobile applications.&lt;/p&gt;
</description>
        <pubDate>Mon, 03 Jan 2022 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/javascript-design-patterns</link>
        <guid isPermaLink="true">http://localhost:4000/javascript-design-patterns</guid>
        
        <category>JavaScript</category>
        
        <category>Tips</category>
        
        
      </item>
    
      <item>
        <title>Installing Multiple Versions of Node.js Using NVM</title>
        <description>&lt;p&gt;&lt;strong&gt;Node.js&lt;/strong&gt; is an open-source, cross-platform JavaScript run-time environment for executing JavaScript code server-side. Historically, JavaScript was used primarily for client-side scripting, in which scripts written in JavaScript are embedded in a webpage’s HTML, to be run client-side by a JavaScript engine in the user’s web browser.&lt;/p&gt;

&lt;!--more--&gt;

&lt;p&gt;Node.js enables JavaScript to be used for server-side scripting, and runs scripts server-side to produce dynamic web page content before the page is sent to the user’s web browser.&lt;/p&gt;

&lt;p&gt;Consequently, Node.js has become one of the foundational elements of the &lt;strong&gt;“JavaScript everywhere”&lt;/strong&gt; paradigm, allowing web application development to unify around a single programming language, rather than rely on a different language for writing server side scripts.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;“Computer science education cannot make anybody an expert programmer any more than studying brushes and pigment can make somebody an expert painter.”
&lt;cite&gt;- Eric S. Raymond -&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Though .js is the conventional filename extension for JavaScript code, the name “Node.js” does not refer to a particular file in this context and is merely the name of the product. Node.js has an event-driven architecture capable of asynchronous I/O. These design choices aim to optimize throughput and scalability in Web applications with many input/output operations, as well as for real-time Web applications (e.g., real-time communication programs and browser games).&lt;/p&gt;

&lt;p&gt;The Node.js distributed development project, governed by the Node.js Foundation, is facilitated by the Linux Foundation’s Collaborative Projects program.&lt;/p&gt;

&lt;p&gt;Corporate users of Node.js software include IBM, LinkedIn, Microsoft, Netflix, PayPal, Rakuten, SAP, Voxer and Yahoo!.&lt;/p&gt;

&lt;p&gt;##History&lt;/p&gt;

&lt;p&gt;Node.js was originally written by &lt;a href=&quot;https://en.wikipedia.org/wiki/Ryan_Dahl&quot;&gt;Ryan Dahl&lt;/a&gt; in 2009, about thirteen years after the introduction of the first server-side JavaScript environment, Netscape’s LiveWire Pro Web. The initial release supported only Linux and Mac OS X. Its development and maintenance was led by Dahl and later sponsored by Joyent.&lt;/p&gt;

&lt;p&gt;Dahl was inspired to create Node.js after seeing a file upload progress bar on Flickr. The browser did not know how much of the file had been uploaded and had to query the Web server. Dahl desired an easier way.&lt;/p&gt;

&lt;p&gt;Dahl criticized the limited possibilities of the most popular web server in 2009, Apache HTTP Server, to handle a lot of concurrent connections (up to 10,000 and more) and the most common way of creating code (sequential programming), when code either blocked the entire process or implied multiple execution stacks in the case of simultaneous connections.&lt;/p&gt;

&lt;p&gt;Dahl demonstrated the project at the inaugural European JSConf on November 8, 2009. Node.js combined Google’s V8 JavaScript engine, an event loop, and a low-level I/O API.&lt;/p&gt;

&lt;p&gt;In January 2010, a package manager was introduced for the Node.js environment called npm. The package manager makes it easier for programmers to publish and share source code of Node.js libraries and is designed to simplify installation, updating, and uninstallation of libraries.&lt;/p&gt;

&lt;p&gt;In June 2011, Microsoft and Joyent implemented a native Windows version of Node.js. The first Node.js build supporting Windows was released in July 2011.&lt;/p&gt;

&lt;p&gt;In January 2012, Dahl stepped aside, promoting coworker and npm creator Isaac Schlueter to manage the project. In January 2014, Schlueter announced that Timothy J. Fontaine would lead the project.&lt;/p&gt;

&lt;p&gt;In December 2014, Fedor Indutny started io.js, a fork of Node.js. Due to the internal conflict over Joyent’s governance, io.js was created as an open governance alternative with a separate technical committee. Unlike Node.js, the authors planned to keep io.js up-to-date with the latest releases of the Google V8 JavaScript engine.&lt;/p&gt;

&lt;p&gt;In February 2015, the intent to form a neutral Node.js Foundation was announced. By June 2015, the Node.js and io.js communities voted to work together under the Node.js Foundation.&lt;/p&gt;

&lt;p&gt;In September 2015, Node.js v0.12 and io.js v3.3 were merged back together into Node v4.0. This brought V8 ES6 features into Node.js, and a long-term support release cycle. As of 2016, the io.js website recommends that developers switch back to Node.js and that no further releases of io.js are planned due to the merger.&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Jan 2022 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/Installing-multiple-versions-of-node-js</link>
        <guid isPermaLink="true">http://localhost:4000/Installing-multiple-versions-of-node-js</guid>
        
        <category>JavaScript</category>
        
        <category>Tips</category>
        
        <category>Node</category>
        
        
      </item>
    
      <item>
        <title>Advanced Markdown tips</title>
        <description>&lt;p&gt;If you’ve gotten pretty comfortable with Markdown in Jekyll, then you may enjoy some more advanced tips about the types of things you can do with it!&lt;/p&gt;

&lt;p&gt;As with the last post about the editor, you’ll want to be actually editing this post as you read it so that you can see all the Markdown code we’re using.&lt;/p&gt;

&lt;h2 id=&quot;special-formatting&quot;&gt;Special formatting&lt;/h2&gt;

&lt;p&gt;As well as bold and italics, you can also use some other special formatting in Markdown when the need arises, for example:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;del&gt;strike through&lt;/del&gt;&lt;/li&gt;
  &lt;li&gt;==highlight==&lt;/li&gt;
  &lt;li&gt;*escaped characters*&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;writing-code-blocks&quot;&gt;Writing code blocks&lt;/h2&gt;

&lt;p&gt;There are two types of code elements which can be inserted in Markdown, the first is inline, and the other is block. Inline code is formatted by wrapping any word or words in back-ticks, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;like this&lt;/code&gt;. Larger snippets of code can be displayed across multiple lines using triple back ticks:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.my-link {
    text-decoration: underline;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you want to get really fancy, you can even add syntax highlighting using &lt;a href=&quot;http://prismjs.com/&quot;&gt;Prism.js&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;reference-lists&quot;&gt;Reference lists&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;The quick brown &lt;a href=&quot;https://en.wikipedia.org/wiki/Fox&quot; title=&quot;Wikipedia: Fox&quot;&gt;fox&lt;/a&gt;, jumped over the lazy &lt;a href=&quot;https://en.wikipedia.org/wiki/Dog&quot; title=&quot;Wikipedia: Dog&quot;&gt;dog&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Another way to insert links in markdown is using reference lists. You might want to use this style of linking to cite reference material in a Wikipedia-style. All of the links are listed at the end of the document, so you can maintain full separation between content and its source or reference.&lt;/p&gt;

&lt;h2 id=&quot;creating-footnotes&quot;&gt;Creating footnotes&lt;/h2&gt;

&lt;p&gt;The quick brown fox&lt;sup id=&quot;fnref:1&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:1&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; jumped over the lazy dog&lt;sup id=&quot;fnref:2&quot; role=&quot;doc-noteref&quot;&gt;&lt;a href=&quot;#fn:2&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;

&lt;p&gt;Footnotes are a great way to add additional contextual details when appropriate. Ghost will automatically add footnote content to the very end of your post.&lt;/p&gt;

&lt;h2 id=&quot;full-html&quot;&gt;Full HTML&lt;/h2&gt;

&lt;p&gt;Perhaps the best part of Markdown is that you’re never limited to just Markdown. You can write HTML directly in the Ghost editor and it will just work as HTML usually does. No limits! Here’s a standard YouTube embed code as an example:&lt;/p&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/Cniqsc9QfDo?rel=0&amp;amp;showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:1&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Foxes are red &lt;a href=&quot;#fnref:1&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
    &lt;li id=&quot;fn:2&quot; role=&quot;doc-endnote&quot;&gt;
      &lt;p&gt;Dogs are usually not red &lt;a href=&quot;#fnref:2&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 07 Feb 2018 00:00:00 +1100</pubDate>
        <link>http://localhost:4000/advanced-markdown-tips</link>
        <guid isPermaLink="true">http://localhost:4000/advanced-markdown-tips</guid>
        
        <category>Jekyll</category>
        
        <category>Tips</category>
        
        
      </item>
    
  </channel>
</rss>
